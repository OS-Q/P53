name: CD

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+*"

env:
  MONT: "M03"
  PLAT: "P53"
  TOPIC: "P53(W7500P) "
  LASTV: "v0.0.1"

jobs:
  Lint_Code:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Check out
      uses: actions/checkout@v2
      with:
        submodules: "recursive"
        fetch-depth: 1

    - name: cppcheck
      uses: Qful/check-action@master
      with:
        github_token: ${{ secrets.OSQ_REPO_TOKEN }}
        enable: all
        inconclusive: disable
        inline_suppression: disable
        force_language: c
        force: enable
        max_ctu_depth: 2
        std: c11
        output_file: ./codecheck.txt
        other_options: --bug-hunting --verbose --std=c11

    - name: report
      uses: Qful/check-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.OSQ_REPO_TOKEN }}
        BRANCH_NAME: 'master'

    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: code_check_report
        path: codecheck.txt

  example:
    strategy:
      fail-fast: true
      matrix:
        example:
          - "mbed-blink"
          - "mbed-dsp"
          - "mbed-events"
          - "mbed-rtos"
          - "mbed-serial"

        package: ["all","pio","qio"]
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Install all
        if: matrix.package == 'all'
        run: |
          pip install -U https://github.com/OS-Q/${{ env.MONT }}/releases/latest/download/qio.zip
          qio platform install file://.

      - name: Install qio
        if: matrix.package == 'qio'
        run: |
          pip install -U https://github.com/OS-Q/${{ env.MONT }}/releases/latest/download/qio.zip
          # qio platform install https://github.com/OS-Q/${{ env.PLAT }}/releases/latest/download/qio.zip
          qio platform install file://.

      - name: Install pio
        if: matrix.package == 'pio'
        run: |
          pip install -U https://github.com/platformio/platformio/archive/develop.zip
          # pio platform install https://github.com/OS-Q/${{ env.PLAT }}/archive/pio.zip
          pio platform install file://.

      - name: build examples
        working-directory: examples
        run: |
          pio run -d ${{ matrix.example }}


  example_tail:
    needs:
      - example
    if: startsWith(github.ref, 'refs/tags/') && !success()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: Generate message
        id: message
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "::set-output name=info::fail_build_example_${GITHUB_REF/refs\/tags\//}"

      - name: notification
        uses: Qful/mqtt-action@master
        with:
          protocol: mqtt
          host: ${{secrets.MQTT_SERVER}}
          port: 1883
          username: ${{secrets.MQTT_USERNAME}}
          password: ${{secrets.MQTT_PASSWORD}}
          topic: ${{github.repository}}/${{github.workflow}}/${GITHUB_REF/refs\/tags\//}
          message: ${{ steps.message.outputs.info }}

      - name: delet tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          git fetch
          git tag -d ${GITHUB_REF/refs\/tags\//}
          git push origin :refs/tags/${GITHUB_REF/refs\/tags\//}


  release:
    needs:
      - example
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: package src
        run: |
          zip -r all.zip boards builder extend link.json link.py platform.json platform.py
          zip -r qio.zip boards extend link.json link.py
          zip -r pio.zip boards builder platform.json platform.py
          mkdir package
          cp *.zip package/

      - name: Get Tag
        id: tag_name
        run: |
          echo ::set-output name=TAG_NAME::${GITHUB_REF#refs/tags/}

      - name: Publish Release [GitHub]
        uses: svenstaro/upload-release-action@2.2.0
        with:
          repo_token: ${{ secrets.OSQ_REPO_TOKEN }}
          release_name: ${{ steps.tag_name.outputs.TAG_NAME }}
          tag: ${{ github.ref }}
          file_glob: true
          body: "${{ env.PLAT }} 发布新版本 ${{ steps.tag_name.outputs.TAG_NAME }}"
          file: package/*


  check_release:
    needs:
      - release
    if: success()
    runs-on: ubuntu-latest
    outputs:
      BODY: ${{ steps.check_release.outputs.BODY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1


      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Install
        id: getgh
        run: |
          python -m pip install --upgrade pip
          pip install -U https://github.com/platformio/platformio/archive/develop.zip
          pio platform install https://github.com/OS-Q/${{ env.PLAT }}/releases/latest/download/pio.zip
          pip install -U https://github.com/OS-Q/${{ env.MONT }}/releases/latest/download/qio.zip
          qio platform install https://github.com/OS-Q/${{ env.PLAT }}/releases/latest/download/qio.zip
          echo "::set-output name=status::success"

      - name: Build
        id: build
        if: steps.getgh.outputs.status == 'success' && !cancelled()
        run: |
          qio run -d examples/arduino-blink

  release_tail:
    needs:
      - check_release
    if: startsWith(github.ref, 'refs/tags/') && !success()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: notification
        uses: Qful/mqtt-action@master
        with:
          protocol: mqtt
          host: ${{secrets.MQTT_SERVER}}
          port: 1883
          username: ${{secrets.MQTT_USERNAME}}
          password: ${{secrets.MQTT_PASSWORD}}
          topic: ${{github.repository}}/${{github.workflow}}
          message: "check release not success"

      - name: delet tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          git fetch
          git tag -d ${GITHUB_REF/refs\/tags\//}
          git push origin :refs/tags/${GITHUB_REF/refs\/tags\//}


  package:
    needs:
      - example
    if: success()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: delet
        if: success()
        working-directory: examples
        run: |
          rm -rf .git*

      - name: Setup Folder
        uses: Qful/ossutil-action@master
        with:
          endpoint: ${{ secrets.OSS_ENDPOINT }}
          access-key-id: ${{ secrets.OSS_ACCESS_KEY_ID }}
          access-key-secret: ${{ secrets.OSS_ACCESS_KEY_SECRET }}

      - name: Upload Package
        id: OSS
        run: |
          zip -r ${{ env.PLAT }}.zip examples boards builder link.json link.py platform.json platform.py
          ossutil cp ${{ env.PLAT }}.zip ${{ secrets.OSS_BUCKET_P }} -f
          echo "::set-output name=status::success"

      - name: notification
        uses: Qful/mqtt-action@master
        with:
          protocol: mqtt
          host: ${{secrets.MQTT_SERVER}}
          port: 1883
          username: ${{secrets.MQTT_USERNAME}}
          password: ${{secrets.MQTT_PASSWORD}}
          topic: ${{github.repository}}/${{github.workflow}}/${GITHUB_REF/refs\/tags\//}
          message: "package success"

  check_package:
    needs:
      - package
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Setup OSS
        uses: Qful/ossutil-action@master
        with:
          endpoint: ${{ secrets.OSS_ENDPOINT }}
          access-key-id: ${{ secrets.OSS_ACCESS_KEY_ID }}
          access-key-secret: ${{ secrets.OSS_ACCESS_KEY_SECRET }}

      - name: download package
        id: download
        run: |
          echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
          echo -e "${{ env.TOPIC }} ${{ env.PLAT }}" >> ${{ env.PLAT }}.txt
          echo -e "$(date +"%Y.%m.%d") ${GITHUB_REF/refs\/tags\//}" >> ${{ env.PLAT }}.txt
          git log "${{ env.LASTV }}..${{ env.VERSION }}" --stat --pretty=format:"%h - %an, %ar : %s" >> ${{ env.PLAT }}.txt
          ossutil cp ${{ env.PLAT }}.txt ${{ secrets.OSS_MAIL_INFO }} -f
          ossutil cp ${{ secrets.OSS_BUCKET_P }}${{ env.PLAT }}.zip .
          ossutil cp ${{ secrets.OSS_MAIL_INFO }}${{ env.PLAT }}.md .
          echo "::set-output name=status::success"

      - name: Install test
        if: steps.download.outputs.status == 'success' && !cancelled()
        run: |
          python -m pip install --upgrade pip
          pip install -U https://github.com/platformio/platformio/archive/develop.zip
          pio platform install file://./${{ env.PLAT }}.zip
          pip install -U https://github.com/OS-Q/${{ env.MONT }}/releases/latest/download/qio.zip
          qio platform install file://./${{ env.PLAT }}.zip

      - name: Send Mail
        if: success()
        uses: Qful/mail-action@master
        with:
          server_address:  smtp.gmail.com
          server_port: 465
          username: ${{secrets.MAIL_USERNAME}}
          password: ${{secrets.MAIL_PASSWORD}}
          subject: ${{ env.TOPIC }} ${{ env.PLAT }} released ${{ env.VERSION }}
          to: ${{secrets.MAIL_TO}}
          from: Qitas
          cc: ${{github.event.pusher.email}}
          content_type: text/html
          convert_markdown: true
          attachments: ${{ env.PLAT }}.txt
          body: file://./${{ env.PLAT }}.md

  package_tail:
    needs:
      - check_package
    if: startsWith(github.ref, 'refs/tags/') && !success()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: notification
        uses: Qful/mqtt-action@master
        with:
          protocol: mqtt
          host: ${{secrets.MQTT_SERVER}}
          port: 1883
          username: ${{secrets.MQTT_USERNAME}}
          password: ${{secrets.MQTT_PASSWORD}}
          topic: ${{github.repository}}/${{github.workflow}}
          message: "package check fail"

      # - name: delet tag
      #   run: |
      #     git fetch
      #     git tag -d ${GITHUB_REF/refs\/tags\//}
      #     git push origin :refs/tags/${GITHUB_REF/refs\/tags\//}
